I"B<p>lorsque lâ€™on install docker, cela crÃ©Ã© 3 rÃ©seaux automatiquement</p>

<ul>
  <li>bridge</li>
  <li>none</li>
  <li>host</li>
</ul>

<p>rÃ©seau par dÃ©faut ou les container son rattachÃ©s</p>

<p>si on veut rattacher un container Ã  un autre rÃ©seau il faut le prÃ©ciser avec lâ€™option <code class="language-plaintext highlighter-rouge">--network</code></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run Ubuntu <span class="nt">--network</span><span class="o">=</span>host
docker run Ubuntu <span class="nt">--network</span><span class="o">=</span>none
</code></pre></div></div>

<h2 id="bridge">bridge</h2>

<p>câ€™est un rÃ©seau privÃ© interne crÃ©Ã© par docker sur la machine (host)</p>

<p>par dÃ©faut chaque container est lancer dans ce rÃ©seau.</p>

<p>en gÃ©nÃ©ral chaque container Ã  une address ip dans les 172.17.0.0/255</p>

<p>chaque container peut recourir Ã  un autre en utilisant ces ip</p>

<p>pour accÃ©der Ã  ces container depuis lâ€™extÃ©rieur, il nous faut mapper les port</p>

<p>une autre possibilitÃ© est de rattacher nos container au rÃ©seau host</p>

<h2 id="host">host</h2>

<p>pour accÃ©der au container sans avoir a mapper les ports.</p>

<p>mais on ne pourra pas lancer plusieur container similaire comme un server web car les ports seront les mÃªme</p>

<h2 id="none">none</h2>

<p>les container dans ce rÃ©seau sont isolÃ©. on ne peut pas y accÃ©der depuis lâ€™extÃ©rieur</p>

<h2 id="network">network</h2>

<p>par dÃ©faut tout nos container seront reliÃ©s Ã  un seul bridge rÃ©seau Ã  lâ€™intÃ©rieur de host</p>

<p><img src="/assets/img/docker/singleNetwork.png" alt="un rÃ©seau" /></p>

<p>si lâ€™on veut crÃ©er plusieur rÃ©seau</p>

<p><img src="/assets/img/docker/multipleNetwork.png" alt="plusieurs rÃ©seau" /></p>

<p>ici on crÃ©Ã© un nouveau rÃ©seau Ã  partir du driver bridge et du subnet 182.18.0/16 suivi par le nom custom-isolated-network</p>

<h2 id="voir-les-rÃ©seau">voir les rÃ©seau</h2>

<p>pour voir les rÃ©seau configurer dans un container on lance la commande <code class="language-plaintext highlighter-rouge">inspect</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker inspect <span class="sb">`</span>container name<span class="sb">`</span>
</code></pre></div></div>

<p>dans les rÃ©sultats dans la section <code class="language-plaintext highlighter-rouge">NetworkSettings</code> &gt; <code class="language-plaintext highlighter-rouge">Ç¸etwork</code> on peut retrouver le type de rÃ©seau ainsi que son ip interne et son address MAC</p>

<p>pour voir les rÃ©seau configurer dans notre systeme on lance la commande <code class="language-plaintext highlighter-rouge">network</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker network <span class="nb">ls</span>
</code></pre></div></div>

<p>on peut inspecter un network</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker network inspect bridge
</code></pre></div></div>

<h2 id="accÃ¨s-entre-container">accÃ¨s entre container</h2>

<p>pour avoir accÃ¨s dâ€™un container Ã  un autre on pourrai utiliser leur address ip mais celle-ci pourrait Ãªtre diffÃ©rente</p>

<p>on utilisera plutÃ´t le nom des container. Docker comprend un server DNS interne</p>

<p>le serveur DNS interne de docker utilise lâ€™addres 127.17.0.11</p>

<h2 id="crÃ©ation-de-rÃ©seau">crÃ©ation de rÃ©seau</h2>

<p>docker network create â€“driver bridge â€“subnet 182.18.0.1/24 â€“gateway 182.18.0.1 wp-mysql-network</p>
:ET