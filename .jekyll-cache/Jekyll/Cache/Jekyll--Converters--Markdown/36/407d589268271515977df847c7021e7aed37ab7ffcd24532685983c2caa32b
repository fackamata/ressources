I"^<h3 class="-prime" id="usage">Usage</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> &lt;options&gt; pattern &lt;file...&gt;
</code></pre></div></div>

<h3 id="matching-options">Matching options</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-e</span>, <span class="nt">--regexp</span><span class="o">=</span>PATTERN
<span class="nt">-f</span>, <span class="nt">--file</span><span class="o">=</span>FILE
<span class="nt">-i</span>, <span class="nt">--ignore-case</span>
<span class="nt">-v</span>, <span class="nt">--invert-match</span>
<span class="nt">-w</span>, <span class="nt">--word-regexp</span>
<span class="nt">-x</span>, <span class="nt">--line-regexp</span>
</code></pre></div></div>

<h3 id="pattern-options">Pattern options</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-F</span>, <span class="nt">--fixed-strings</span>   <span class="c"># list of fixed strings</span>
<span class="nt">-G</span>, <span class="nt">--basic-regexp</span>    <span class="c"># basic regular expression (default)</span>
<span class="nt">-E</span>, <span class="nt">--extended-regexp</span> <span class="c"># extended regular expression</span>
<span class="nt">-P</span>, <span class="nt">--perl-regexp</span>     <span class="c"># perl compatible regular expression</span>
</code></pre></div></div>

<h3 id="expressions">Expressions</h3>

<h4 id="basic-regular-expressions-bre">Basic Regular Expressions (BRE)</h4>

<p>In BRE, these characters have a special meaning unless they are escaped with a backslash:</p>

<p><code class="language-plaintext highlighter-rouge">^ $ . * [ ] \</code></p>

<p>However, these characters do not have any special meaning unless they are escaped with a backslash:</p>

<p><code class="language-plaintext highlighter-rouge">? + { } | ( )</code></p>

<h4 id="extended-regular-expressions-ere">Extended Regular Expressions (ERE)</h4>

<p>ERE gives all of these characters a special meaning unless they are escaped with a backslash:</p>

<p><code class="language-plaintext highlighter-rouge">^ $ . * + ? [ ] ( ) | { }</code></p>

<h4 id="perl-compatible-regular-expressions-pcre">Perl Compatible Regular Expressions (PCRE)</h4>

<p>PCRE has even more options such as additional anchors and character classes, lookahead/lookbehind, conditional expressions, comments, and more. See the <a href="/regexp">regexp cheatsheet</a>.</p>

<h3 id="output-options">Output Options</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-c</span>, <span class="nt">--count</span>           <span class="c"># print the count of matching lines. suppresses normal output</span>
    <span class="nt">--color</span><span class="o">[=</span>WHEN]    <span class="c"># applies color to the matches. WHEN is never, always, or auto</span>
<span class="nt">-m</span>, <span class="nt">--max-count</span><span class="o">=</span>NUM   <span class="c"># stop reading after max count is reached</span>
<span class="nt">-o</span>, <span class="nt">--only-matching</span>   <span class="c"># only print the matched part of a line</span>
<span class="nt">-q</span>, <span class="nt">--quiet</span>, <span class="nt">--silent</span>
<span class="nt">-s</span>, <span class="nt">--no-messages</span>     <span class="c"># suppress error messages about nonexistent or unreadable files</span>
</code></pre></div></div>

<h3 id="context-options">Context Options</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-B</span> NUM, <span class="nt">--before-context</span><span class="o">=</span>NUM  <span class="c"># print NUM lines before a match</span>
<span class="nt">-A</span> NUM, <span class="nt">--after-context</span><span class="o">=</span>NUM   <span class="c"># print NUM lines after a match</span>
<span class="nt">-C</span> NUM, <span class="nt">-NUM</span>, <span class="nt">--context</span><span class="o">=</span>NUM   <span class="c"># print NUM lines before and after a match</span>
</code></pre></div></div>

<h3 id="examples">Examples</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Case insensitive: match any line in foo.txt</span>
<span class="c"># that contains "bar"</span>
<span class="nb">grep</span> <span class="nt">-i</span> bar foo.txt

<span class="c">#  match any line in bar.txt that contains</span>
<span class="c"># either "foo" or "oof"</span>
<span class="nb">grep</span> <span class="nt">-E</span> <span class="s2">"foo|oof"</span> bar.txt

<span class="c"># match anything that resembles a URL in</span>
<span class="c"># foo.txt and only print out the match</span>
<span class="nb">grep</span> <span class="nt">-oE</span> <span class="s2">"https?:</span><span class="se">\/\/</span><span class="s2">((</span><span class="se">\w</span><span class="s2">+[_-]?)+</span><span class="se">\.</span><span class="s2">?)+"</span> foo.txt

<span class="c"># can also be used with pipes:</span>
<span class="c"># match any line that contains "export" in</span>
<span class="c"># .bash_profile, pipe to another grep that</span>
<span class="c"># matches any of the first set of matches</span>
<span class="c"># containing "PATH"</span>
<span class="nb">grep</span> <span class="s2">"export"</span> .bash_profile | <span class="nb">grep</span> <span class="s2">"PATH"</span>

<span class="c"># follow the tail of server.log, pipe to grep</span>
<span class="c"># and print out any line that contains "error"</span>
<span class="c"># and include 5 lines of context</span>
<span class="nb">tail</span> <span class="nt">-f</span> server.log | <span class="nb">grep</span> <span class="nt">-iC</span> 5 error
</code></pre></div></div>
:ET