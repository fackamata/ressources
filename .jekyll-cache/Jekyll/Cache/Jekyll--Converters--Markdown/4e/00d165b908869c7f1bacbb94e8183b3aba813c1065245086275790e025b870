I"@<h3 id="functions">Functions</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * This is a function.
 *
 * @param {string} n - A string param
 * @param {string} [o] - A optional string param
 * @param {string} [d=DefaultValue] - A optional string param
 * @return {string} A good string
 *
 * @example
 *
 *     foo('hello')
 */</span>

<span class="kd">function</span> <span class="nx">foo</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">o</span><span class="p">,</span> <span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">n</span>
<span class="p">}</span>
</code></pre></div></div>

<p>See: <a href="https://jsdoc.app/index.html">https://jsdoc.app/index.html</a></p>

<h3 id="types">Types</h3>

<table>
  <thead>
    <tr>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {string=} n</code></td>
      <td>Optional</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {string} [n]</code></td>
      <td>Optional</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {(string|number)} n</code></td>
      <td>Multiple types</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {*} n</code></td>
      <td>Any type</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {...string} n</code></td>
      <td>Repeatable arguments</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {string} [n="hi"]</code></td>
      <td>Optional with default</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@param {string[]} n</code></td>
      <td>Array of strings</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">@return {Promise&lt;string[]&gt;} n</code></td>
      <td>Promise fulfilled by array of strings</td>
    </tr>
  </tbody>
</table>

<p>See: <a href="https://jsdoc.app/tags-type.html">https://jsdoc.app/tags-type.html</a></p>

<h3 id="variables">Variables</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * @type {number}
 */</span>
<span class="kd">var</span> <span class="nx">FOO</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * @const {number}
 */</span>
<span class="kd">const</span> <span class="nx">FOO</span> <span class="o">=</span> <span class="mi">1</span>
</code></pre></div></div>

<h3 id="typedef">Typedef</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * A song
 * @typedef {Object} Song
 * @property {string} title - The title
 * @property {string} artist - The artist
 * @property {number} year - The year
 */</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Plays a song
 * @param {Song} song - The {@link Song} to be played
 */</span>

<span class="kd">function</span> <span class="nx">play</span><span class="p">(</span><span class="nx">song</span><span class="p">)</span> <span class="p">{}</span>
</code></pre></div></div>

<p>See: <a href="https://jsdoc.app/tags-typedef.html">https://jsdoc.app/tags-typedef.html</a></p>

<h3 id="typedef-shorthand">Typedef Shorthand</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * A song
 * @typedef {{title: string, artist: string, year: number}} Song
 */</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Plays a song
 * @param {Song} song - The {@link Song} to be played
 */</span>

<span class="kd">function</span> <span class="nx">play</span><span class="p">(</span><span class="nx">song</span><span class="p">)</span> <span class="p">{}</span>
</code></pre></div></div>

<p>See: <a href="https://jsdoc.app/tags-typedef.html">https://jsdoc.app/tags-typedef.html</a></p>

<h3 id="importing-types">Importing types</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * @typedef {import('./Foo').default} Bar
 */</span>

<span class="cm">/**
 * @param {Bar} x
 */</span>

<span class="kd">function</span> <span class="nx">test</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{}</span>
</code></pre></div></div>

<p>This syntax is <a href="https://github.com/Microsoft/TypeScript/wiki/JsDoc-support-in-JavaScript#import-types">TypeScript-specific</a>.</p>

<h3 id="other-keywords">Other keywords</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * @throws {FooException}
 * @async
 * @private
 * @deprecated
 * @see
 *
 * @function
 * @class
 */</span>
</code></pre></div></div>

<p>See the full list: <a href="https://jsdoc.app/index.html#block-tags">https://jsdoc.app/index.html#block-tags</a></p>

<h3 id="renaming">Renaming</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * @alias Foo.bar
 * @name Foo.bar
 */</span>
</code></pre></div></div>

<p>Prefer <code class="language-plaintext highlighter-rouge">alias</code> over <code class="language-plaintext highlighter-rouge">name</code>. See: <a href="https://jsdoc.app/tags-alias.html">https://jsdoc.app/tags-alias.html</a></p>
:ET